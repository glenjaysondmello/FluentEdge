# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MoodEntry {
  _id: ID!
  userId: String!
  date: String!
  mood: String!
  journalText: String!
  sentimentScore: Float
}

type MoodAnalyticsOutput {
  averageMoodScore: Float!
  moodCount: Int!
  positiveDays: Int!
  negativeDays: Int!
  mostUsedWords: [String!]!
  streak: Int!
}

type Mistake {
  error: String!
  correction: String!
  type: String!
}

type TypingTest {
  id: ID!
  uid: String!
  referenceText: String!
  userText: String!
  durationSec: Float!
  wpm: Float!
  cpm: Float!
  accuracy: Float!
  mistakes: [Mistake!]!
  score: Float!
  suggestions: [String!]!
  encouragement: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Score {
  fluency: Float!
  pronunciation: Float!
  grammar: Float!
  vocabulary: Float!
  overall: Float!
}

type MistakeS {
  error: String!
  correction: String!
  type: String!
}

type SpeakingTest {
  id: ID!
  uid: String!
  referenceText: String!
  transcript: String!
  scores: Score!
  mistakes: [MistakeS!]!
  suggestions: [String!]!
  encouragement: String!
  createdAt: DateTime!
}

type Query {
  getTodayMood: MoodEntry
  getMoodHistory(range: DateRangeInput!): [MoodEntry!]!
  getMoodStats: MoodAnalyticsOutput!
  getTypingTestText: String!
  getTypingTests: [TypingTest!]!
  getSpeakingTestText: String!
  getSpeakingTests: [SpeakingTest!]!
}

input DateRangeInput {
  startDate: String!
  endDate: String!
}

type Mutation {
  logMood(input: MoodLogInput!): MoodEntry!
  updateMood(id: String!, input: MoodLogInput!): MoodEntry!
  deleteMood(id: String!): Boolean!
  submitTypingTest(referenceText: String!, userText: String!, durationSec: Float!): TypingTest!
  submitSpeakingTest(referenceText: String!, audioBase64: String!): SpeakingTest!
}

input MoodLogInput {
  date: String!
  mood: MoodType!
  journalText: String!
  sentimentScore: Float
}

enum MoodType {
  HAPPY
  SAD
  NEUTRAL
  ANGRY
  EXCITED
  TIRED
  STRESSED
}